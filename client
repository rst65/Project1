#include <stdlib.h>
#include <unistd.h>
#include <stdio.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <string.h>
#include <netdb.h>

// Define a struct for student information
typedef struct {
    int ID;
    char Fname[30];
    char Lname[30];
    int score;
} Student;

// Function prototypes for handling each command
void add(int socket);
void display(int socket);
void display_score(int socket);
void display_all(int socket);
void delete(int socket);

// Main function
int main(int argc, char **argv){
    // Your existing code...

    // communication starts from here
    // Display the menu and get the user's choice
    int choice;
    do {
        printf("1. Add new student information to the database\n");
        printf("2. Display a student's information\n");
        printf("3. Display information of all students with a score above a certain score\n");
        printf("4. Display the information of all the students\n");
        printf("5. Delete a student entry from the database\n");
        printf("6. Exit the program\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        // Send the choice to the server
        uint32_t network_choice = htonl(choice);
        send(clientSocket, &network_choice, sizeof(network_choice), 0);

        switch (choice) {
            case 1:
                add(clientSocket);
                break;
            case 2:
                display(clientSocket);
                break;
            case 3:
                display_score(clientSocket);
                break;
            case 4:
                display_all(clientSocket);
                break;
            case 5:
                delete(clientSocket);
                break;
        }
    } while (choice != 6);

    // Your existing code...
}

// Function definitions for handling each command
// You'll need to implement these based on your specific requirements
void add(int socket) {
    // Prompt the user for the student's ID, first name, last name, and score
    // Send this information to the server
}

void display(int socket) {
    // Prompt the user for the student's ID
    // Send this ID to the server
}

void display_score(int socket) {
    // Prompt the user for a score
    // Send this score to the server
}

void display_all(int socket) {
    // Send a request to the server to display all students
}

void delete(int socket) {
    // Prompt the user for the student's ID
    // Send this ID to the server to delete the student
}

